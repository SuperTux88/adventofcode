package adventofcode.common

object OCR {
  def readChar(char: Seq[Seq[Int]]): Char =
    fonts(char.head.length, char.length).getOrElse(char, '_')

  // hardcoded chars for as many solutions I could find :)
  private val fonts =
    Map(
      (5, 6) ->
        Map(
          'A' -> Seq(Seq(0, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 1, 1, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0)),
          'B' -> Seq(Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 1, 1, 0, 0)),
          'C' -> Seq(Seq(0, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 1, 0), Seq(0, 1, 1, 0, 0)),
          'E' -> Seq(Seq(1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0), Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 1, 1, 1, 0)),
          'F' -> Seq(Seq(1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0), Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0)),
          'G' -> Seq(Seq(0, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 1, 1, 0), Seq(1, 0, 0, 1, 0), Seq(0, 1, 1, 1, 0)),
          'H' -> Seq(Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 1, 1, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0)),
          'J' -> Seq(Seq(0, 0, 1, 1, 0), Seq(0, 0, 0, 1, 0), Seq(0, 0, 0, 1, 0), Seq(0, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(0, 1, 1, 0, 0)),
          'K' -> Seq(Seq(1, 0, 0, 1, 0), Seq(1, 0, 1, 0, 0), Seq(1, 1, 0, 0, 0), Seq(1, 0, 1, 0, 0), Seq(1, 0, 1, 0, 0), Seq(1, 0, 0, 1, 0)),
          'L' -> Seq(Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 1, 1, 1, 0)),
          'O' -> Seq(Seq(0, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(0, 1, 1, 0, 0)),
          'P' -> Seq(Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0)),
          'R' -> Seq(Seq(1, 1, 1, 0, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 1, 1, 0, 0), Seq(1, 0, 1, 0, 0), Seq(1, 0, 0, 1, 0)),
          'S' -> Seq(Seq(0, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(0, 1, 1, 0, 0), Seq(0, 0, 0, 1, 0), Seq(1, 1, 1, 0, 0)),
          'U' -> Seq(Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0), Seq(0, 1, 1, 0, 0)),
          'Y' -> Seq(Seq(1, 0, 0, 0, 1), Seq(1, 0, 0, 0, 1), Seq(0, 1, 0, 1, 0), Seq(0, 0, 1, 0, 0), Seq(0, 0, 1, 0, 0), Seq(0, 0, 1, 0, 0)),
          'Z' -> Seq(Seq(1, 1, 1, 1, 0), Seq(0, 0, 0, 1, 0), Seq(0, 0, 1, 0, 0), Seq(0, 1, 0, 0, 0), Seq(1, 0, 0, 0, 0), Seq(1, 1, 1, 1, 0)),
        ).map(_.swap),
      (6, 10) ->
        Map(
          'A' -> Seq(Seq(0, 0, 1, 1, 0, 0), Seq(0, 1, 0, 0, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 1, 1, 1, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1)),
          'B' -> Seq(Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 1, 1, 1, 0)),
          'C' -> Seq(Seq(0, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 1), Seq(0, 1, 1, 1, 1, 0)),
          'E' -> Seq(Seq(1, 1, 1, 1, 1, 1), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 1, 1, 1, 1, 1)),
          'F' -> Seq(Seq(1, 1, 1, 1, 1, 1), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0)),
          'G' -> Seq(Seq(0, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 1, 1, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 1, 1), Seq(0, 1, 1, 1, 0, 1)),
          'H' -> Seq(Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 1, 1, 1, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1)),
          'J' -> Seq(Seq(0, 0, 0, 1, 1, 1), Seq(0, 0, 0, 0, 1, 0), Seq(0, 0, 0, 0, 1, 0), Seq(0, 0, 0, 0, 1, 0), Seq(0, 0, 0, 0, 1, 0), Seq(0, 0, 0, 0, 1, 0), Seq(0, 0, 0, 0, 1, 0), Seq(1, 0, 0, 0, 1, 0), Seq(1, 0, 0, 0, 1, 0), Seq(0, 1, 1, 1, 0, 0)),
          'K' -> Seq(Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 1, 0), Seq(1, 0, 0, 1, 0, 0), Seq(1, 0, 1, 0, 0, 0), Seq(1, 1, 0, 0, 0, 0), Seq(1, 1, 0, 0, 0, 0), Seq(1, 0, 1, 0, 0, 0), Seq(1, 0, 0, 1, 0, 0), Seq(1, 0, 0, 0, 1, 0), Seq(1, 0, 0, 0, 0, 1)),
          'L' -> Seq(Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 1, 1, 1, 1, 1)),
          'N' -> Seq(Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 0, 0, 0, 1), Seq(1, 1, 0, 0, 0, 1), Seq(1, 0, 1, 0, 0, 1), Seq(1, 0, 1, 0, 0, 1), Seq(1, 0, 0, 1, 0, 1), Seq(1, 0, 0, 1, 0, 1), Seq(1, 0, 0, 0, 1, 1), Seq(1, 0, 0, 0, 1, 1), Seq(1, 0, 0, 0, 0, 1)),
          'P' -> Seq(Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0)),
          'R' -> Seq(Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(1, 1, 1, 1, 1, 0), Seq(1, 0, 0, 1, 0, 0), Seq(1, 0, 0, 0, 1, 0), Seq(1, 0, 0, 0, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1)),
          'X' -> Seq(Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1), Seq(0, 1, 0, 0, 1, 0), Seq(0, 1, 0, 0, 1, 0), Seq(0, 0, 1, 1, 0, 0), Seq(0, 0, 1, 1, 0, 0), Seq(0, 1, 0, 0, 1, 0), Seq(0, 1, 0, 0, 1, 0), Seq(1, 0, 0, 0, 0, 1), Seq(1, 0, 0, 0, 0, 1)),
          'Z' -> Seq(Seq(1, 1, 1, 1, 1, 1), Seq(0, 0, 0, 0, 0, 1), Seq(0, 0, 0, 0, 0, 1), Seq(0, 0, 0, 0, 1, 0), Seq(0, 0, 0, 1, 0, 0), Seq(0, 0, 1, 0, 0, 0), Seq(0, 1, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 0, 0, 0, 0, 0), Seq(1, 1, 1, 1, 1, 1)),
        ).map(_.swap),
    )
}
